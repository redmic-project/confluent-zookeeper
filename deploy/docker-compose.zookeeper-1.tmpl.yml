version: '3.5'

services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:${IMAGE_TAG:-latest}
    hostname: zk-1
    environment:
      - ZOOKEEPER_SERVER_ID=1
      - ZOOKEEPER_CLIENT_PORT=${ZK_PORT}
      - KAFKA_JMX_PORT=${JMX_PORT}
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_INIT_LIMIT=5
      - ZOOKEEPER_SYNC_LIMIT=2
      - ZOOKEEPER_AUTOPURGE_SNAP_RETAIN_COUNT=3
      - ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL=24
      - ZOOKEEPER_SERVERS=zk-1:2888:3888;zk-2:2888:3888;zk-3:2888:3888
      - KAFKA_JMX_HOSTNAME=zk-1
      - KAFKA_OPTS=-javaagent:/jmx_prometheus_javaagent.jar=${JMX_HTTP_PORT}:/config.yaml
    networks:
      kafka-net:
        aliases:
          - zk-1
      metric-net:
    configs:
      - source: jmx-prometheus-javaagent
        target: /jmx_prometheus_javaagent.jar
      - source: jmx-prometheus-config
        target: /config.yaml
    volumes:
      - zk-data-vol:/var/lib/zookeeper/data
      - zk-log-vol:/var/lib/zookeeper/log
      - zk-secrets-vol:/etc/zookeeper/secrets
    healthcheck:
      test: echo ruok | nc localhost ${ZK_PORT}
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 2m

networks:
  kafka-net:
    name: ${KAFKA_NET_NAME:-kafka-net}
    driver: overlay
    attachable: ${KAFKA_NET_ATTACHABLE:-true}

  metric-net:
    name: ${METRIC_NET_NAME:-metric-net}
    external: true

volumes:
  zk-secrets-vol:
    name: ${ZK_SECRETS_VOL_NAME:-zk-1-secrets-vol}

configs:
  jmx-prometheus-javaagent:
    name: ${JMX_PROMETHEUS_JAVA_AGENT_NAME:-jmx-prometheus-javaagent}
    file: ./config/jmx_prometheus_javaagent-0.3.1.jar

  jmx-prometheus-config:
    name: ${JMX_PROMETHEUS_CONFIG_NAME:-jmx-prometheus-config}
    file: ./config/config.yaml
